module builtin_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Time_ {
                int32 sec_;
                uint32 nanosec_;
      };

    };
  };
};
module builtin_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Duration_ {
                int32 sec_;
                uint32 nanosec_;
      };

    };
  };
};
module unique_identifier_msgs {
  module msg {
    module dds_ {
      @appendable
      struct UUID_ {
                octet uuid_[16];
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct UInt64_ {
                uint64 data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Empty_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct MultiArrayDimension_ {
                string<255> label_;
                uint32 size_;
                uint32 stride_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct MultiArrayLayout_ {
                sequence<example_interfaces::msg::dds_::MultiArrayDimension_,100> dim_;
                uint32 data_offset_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Int8MultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<octet,100> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Float64MultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<double,100> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct UInt32_ {
                uint32 data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Float64_ {
                double data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Byte_ {
                octet data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Int16_ {
                int16 data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Int8_ {
                octet data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Int64MultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<int64,100> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct UInt8_ {
                octet data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Int32_ {
                int32 data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct UInt32MultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<uint32,100> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct ByteMultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<octet,100> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Float32MultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<float,100> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct WString_ {
                wstring<255> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Int16MultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<int16,100> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct String_ {
                string<255> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct UInt16MultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<uint16,100> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct UInt64MultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<uint64,100> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct UInt16_ {
                uint16 data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Int32MultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<int32,100> data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Int64_ {
                int64 data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Char_ {
                octet data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Bool_ {
                boolean data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Float32_ {
                float data_;
      };

    };
  };
};
module example_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct UInt8MultiArray_ {
                example_interfaces::msg::dds_::MultiArrayLayout_ layout_;
                sequence<octet,100> data_;
      };

    };
  };
};
module example_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_Goal_ {
                int32 order_;
      };

    };
  };
};
module example_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_SendGoal_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                example_interfaces::action::dds_::Fibonacci_Goal_ goal_;
      };

    };
  };
};
module example_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_SendGoal_Response_ {
                boolean accepted_;
                builtin_interfaces::msg::dds_::Time_ stamp_;
      };

    };
  };
};
module example_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_Result_ {
                sequence<int32,100> sequence_;
      };

    };
  };
};
module example_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_GetResult_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
      };

    };
  };
};
module example_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_GetResult_Response_ {
                octet status_;
                example_interfaces::action::dds_::Fibonacci_Result_ result_;
      };

    };
  };
};
module example_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_Feedback_ {
                sequence<int32,100> sequence_;
      };

    };
  };
};
module example_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_FeedbackMessage_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                example_interfaces::action::dds_::Fibonacci_Feedback_ feedback_;
      };

    };
  };
};
module example_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct SetBool_Request_ {
                boolean data_;
      };

    };
  };
};
module example_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct SetBool_Response_ {
                boolean success_;
                string<255> message_;
      };

    };
  };
};
module example_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct AddTwoInts_Request_ {
                int64 a_;
                int64 b_;
      };

    };
  };
};
module example_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct AddTwoInts_Response_ {
                int64 sum_;
      };

    };
  };
};
module example_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct Trigger_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module example_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct Trigger_Response_ {
                boolean success_;
                string<255> message_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MultiArrayDimension_ {
                string<255> label_;
                uint32 size_;
                uint32 stride_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Int32_ {
                int32 data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MultiArrayLayout_ {
                sequence<std_msgs::msg::dds_::MultiArrayDimension_,100> dim_;
                uint32 data_offset_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct UInt64_ {
                uint64 data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Int8MultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<octet,100> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Empty_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Float64MultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<double,100> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct UInt32_ {
                uint32 data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Float64_ {
                double data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Byte_ {
                octet data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Int16_ {
                int16 data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Int8_ {
                octet data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Int64MultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<int64,100> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct UInt8_ {
                octet data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Header_ {
                builtin_interfaces::msg::dds_::Time_ stamp_;
                string<255> frame_id_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct UInt32MultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<uint32,100> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct ByteMultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<octet,100> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct ColorRGBA_ {
                float r_;
                float g_;
                float b_;
                float a_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Float32MultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<float,100> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Int16MultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<int16,100> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct String_ {
                string<255> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct UInt16MultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<uint16,100> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct UInt64MultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<uint64,100> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct UInt16_ {
                uint16 data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Int32MultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<int32,100> data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Int64_ {
                int64 data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Char_ {
                octet data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Bool_ {
                boolean data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Float32_ {
                float data_;
      };

    };
  };
};
module std_msgs {
  module msg {
    module dds_ {
      @appendable
      struct UInt8MultiArray_ {
                std_msgs::msg::dds_::MultiArrayLayout_ layout_;
                sequence<octet,100> data_;
      };

    };
  };
};
module std_srvs {
  module srv {
    module dds_ {
      @appendable
      struct Empty_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module std_srvs {
  module srv {
    module dds_ {
      @appendable
      struct Empty_Response_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module std_srvs {
  module srv {
    module dds_ {
      @appendable
      struct SetBool_Request_ {
                boolean data_;
      };

    };
  };
};
module std_srvs {
  module srv {
    module dds_ {
      @appendable
      struct SetBool_Response_ {
                boolean success_;
                string<255> message_;
      };

    };
  };
};
module std_srvs {
  module srv {
    module dds_ {
      @appendable
      struct Trigger_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module std_srvs {
  module srv {
    module dds_ {
      @appendable
      struct Trigger_Response_ {
                boolean success_;
                string<255> message_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Vector3_ {
                double x_;
                double y_;
                double z_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Accel_ {
                geometry_msgs::msg::dds_::Vector3_ linear_;
                geometry_msgs::msg::dds_::Vector3_ angular_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct AccelStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Accel_ accel_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Quaternion_ {
                double x_;
                double y_;
                double z_;
                double w_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Transform_ {
                geometry_msgs::msg::dds_::Vector3_ translation_;
                geometry_msgs::msg::dds_::Quaternion_ rotation_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Wrench_ {
                geometry_msgs::msg::dds_::Vector3_ force_;
                geometry_msgs::msg::dds_::Vector3_ torque_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct WrenchStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Wrench_ wrench_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Point_ {
                double x_;
                double y_;
                double z_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Pose2D_ {
                double x_;
                double y_;
                double theta_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Pose_ {
                geometry_msgs::msg::dds_::Point_ position_;
                geometry_msgs::msg::dds_::Quaternion_ orientation_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct PoseArray_ {
                std_msgs::msg::dds_::Header_ header_;
                sequence<geometry_msgs::msg::dds_::Pose_,100> poses_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Vector3Stamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Vector3_ vector_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Twist_ {
                geometry_msgs::msg::dds_::Vector3_ linear_;
                geometry_msgs::msg::dds_::Vector3_ angular_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct TransformStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                string<255> child_frame_id_;
                geometry_msgs::msg::dds_::Transform_ transform_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct AccelWithCovariance_ {
                geometry_msgs::msg::dds_::Accel_ accel_;
                double covariance_[36];
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct AccelWithCovarianceStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::AccelWithCovariance_ accel_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Inertia_ {
                double m_;
                geometry_msgs::msg::dds_::Vector3_ com_;
                double ixx_;
                double ixy_;
                double ixz_;
                double iyy_;
                double iyz_;
                double izz_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct InertiaStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Inertia_ inertia_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Point32_ {
                float x_;
                float y_;
                float z_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Polygon_ {
                sequence<geometry_msgs::msg::dds_::Point32_,100> points_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct PolygonStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Polygon_ polygon_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct TwistWithCovariance_ {
                geometry_msgs::msg::dds_::Twist_ twist_;
                double covariance_[36];
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct PointStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Point_ point_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct TwistWithCovarianceStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::TwistWithCovariance_ twist_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct TwistStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Twist_ twist_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct PoseWithCovariance_ {
                geometry_msgs::msg::dds_::Pose_ pose_;
                double covariance_[36];
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct PoseWithCovarianceStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::PoseWithCovariance_ pose_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct QuaternionStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Quaternion_ quaternion_;
      };

    };
  };
};
module geometry_msgs {
  module msg {
    module dds_ {
      @appendable
      struct PoseStamped_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Pose_ pose_;
      };

    };
  };
};
module nav_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MapMetaData_ {
                builtin_interfaces::msg::dds_::Time_ map_load_time_;
                float resolution_;
                uint32 width_;
                uint32 height_;
                geometry_msgs::msg::dds_::Pose_ origin_;
      };

    };
  };
};
module nav_msgs {
  module msg {
    module dds_ {
      @appendable
      struct OccupancyGrid_ {
                std_msgs::msg::dds_::Header_ header_;
                nav_msgs::msg::dds_::MapMetaData_ info_;
                sequence<octet,100> data_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MultiDOFJointState_ {
                std_msgs::msg::dds_::Header_ header_;
                sequence<string<255>,100 > joint_names_;
                sequence<geometry_msgs::msg::dds_::Transform_,100> transforms_;
                sequence<geometry_msgs::msg::dds_::Twist_,100> twist_;
                sequence<geometry_msgs::msg::dds_::Wrench_,100> wrench_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      module JoyFeedback_Constants {
        const octet TYPE_LED_ = 0;
        const octet TYPE_RUMBLE_ = 1;
        const octet TYPE_BUZZER_ = 2;
      };
      @appendable
      struct JoyFeedback_ {
                octet type_;
                octet id_;
                float intensity_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct LaserEcho_ {
                sequence<float,100> echoes_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct JoyFeedbackArray_ {
                sequence<sensor_msgs::msg::dds_::JoyFeedback_,100> array_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct CompressedImage_ {
                std_msgs::msg::dds_::Header_ header_;
                string<255> format_;
                sequence<octet,100> data_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      module Range_Constants {
        const octet ULTRASOUND_ = 0;
        const octet INFRARED_ = 1;
      };
      @appendable
      struct Range_ {
                std_msgs::msg::dds_::Header_ header_;
                octet radiation_type_;
                float field_of_view_;
                float min_range_;
                float max_range_;
                float range_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Imu_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Quaternion_ orientation_;
                double orientation_covariance_[9];
                geometry_msgs::msg::dds_::Vector3_ angular_velocity_;
                double angular_velocity_covariance_[9];
                geometry_msgs::msg::dds_::Vector3_ linear_acceleration_;
                double linear_acceleration_covariance_[9];
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct LaserScan_ {
                std_msgs::msg::dds_::Header_ header_;
                float angle_min_;
                float angle_max_;
                float angle_increment_;
                float time_increment_;
                float scan_time_;
                float range_min_;
                float range_max_;
                sequence<float,100> ranges_;
                sequence<float,100> intensities_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct RegionOfInterest_ {
                uint32 x_offset_;
                uint32 y_offset_;
                uint32 height_;
                uint32 width_;
                boolean do_rectify_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Joy_ {
                std_msgs::msg::dds_::Header_ header_;
                sequence<float,100> axes_;
                sequence<int32,100> buttons_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct FluidPressure_ {
                std_msgs::msg::dds_::Header_ header_;
                double fluid_pressure_;
                double variance_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      module PointField_Constants {
        const octet INT8_ = 1;
        const octet UINT8_ = 2;
        const octet INT16_ = 3;
        const octet UINT16_ = 4;
        const octet INT32_ = 5;
        const octet UINT32_ = 6;
        const octet FLOAT32_ = 7;
        const octet FLOAT64_ = 8;
      };
      @appendable
      struct PointField_ {
                string<255> name_;
                uint32 offset_;
                octet datatype_;
                uint32 count_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Illuminance_ {
                std_msgs::msg::dds_::Header_ header_;
                double illuminance_;
                double variance_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      module BatteryState_Constants {
        const octet POWER_SUPPLY_STATUS_UNKNOWN_ = 0;
        const octet POWER_SUPPLY_STATUS_CHARGING_ = 1;
        const octet POWER_SUPPLY_STATUS_DISCHARGING_ = 2;
        const octet POWER_SUPPLY_STATUS_NOT_CHARGING_ = 3;
        const octet POWER_SUPPLY_STATUS_FULL_ = 4;
        const octet POWER_SUPPLY_HEALTH_UNKNOWN_ = 0;
        const octet POWER_SUPPLY_HEALTH_GOOD_ = 1;
        const octet POWER_SUPPLY_HEALTH_OVERHEAT_ = 2;
        const octet POWER_SUPPLY_HEALTH_DEAD_ = 3;
        const octet POWER_SUPPLY_HEALTH_OVERVOLTAGE_ = 4;
        const octet POWER_SUPPLY_HEALTH_UNSPEC_FAILURE_ = 5;
        const octet POWER_SUPPLY_HEALTH_COLD_ = 6;
        const octet POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE_ = 7;
        const octet POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE_ = 8;
        const octet POWER_SUPPLY_TECHNOLOGY_UNKNOWN_ = 0;
        const octet POWER_SUPPLY_TECHNOLOGY_NIMH_ = 1;
        const octet POWER_SUPPLY_TECHNOLOGY_LION_ = 2;
        const octet POWER_SUPPLY_TECHNOLOGY_LIPO_ = 3;
        const octet POWER_SUPPLY_TECHNOLOGY_LIFE_ = 4;
        const octet POWER_SUPPLY_TECHNOLOGY_NICD_ = 5;
        const octet POWER_SUPPLY_TECHNOLOGY_LIMN_ = 6;
      };
      @appendable
      struct BatteryState_ {
                std_msgs::msg::dds_::Header_ header_;
                float voltage_;
                float temperature_;
                float current_;
                float charge_;
                float capacity_;
                float design_capacity_;
                float percentage_;
                octet power_supply_status_;
                octet power_supply_health_;
                octet power_supply_technology_;
                boolean present_;
                sequence<float,100> cell_voltage_;
                sequence<float,100> cell_temperature_;
                string<255> location_;
                string<255> serial_number_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct CameraInfo_ {
                std_msgs::msg::dds_::Header_ header_;
                uint32 height_;
                uint32 width_;
                string<255> distortion_model_;
                sequence<double,100> d_;
                double k_[9];
                double r_[9];
                double p_[12];
                uint32 binning_x_;
                uint32 binning_y_;
                sensor_msgs::msg::dds_::RegionOfInterest_ roi_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct TimeReference_ {
                std_msgs::msg::dds_::Header_ header_;
                builtin_interfaces::msg::dds_::Time_ time_ref_;
                string<255> source_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct ChannelFloat32_ {
                string<255> name_;
                sequence<float,100> values_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct PointCloud_ {
                std_msgs::msg::dds_::Header_ header_;
                sequence<geometry_msgs::msg::dds_::Point32_,100> points_;
                sequence<sensor_msgs::msg::dds_::ChannelFloat32_,100> channels_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      module NavSatStatus_Constants {
        const octet STATUS_NO_FIX_ = 255;
        const octet STATUS_FIX_ = 0;
        const octet STATUS_SBAS_FIX_ = 1;
        const octet STATUS_GBAS_FIX_ = 2;
        const uint16 SERVICE_GPS_ = 1;
        const uint16 SERVICE_GLONASS_ = 2;
        const uint16 SERVICE_COMPASS_ = 4;
        const uint16 SERVICE_GALILEO_ = 8;
      };
      @appendable
      struct NavSatStatus_ {
                octet status_;
                uint16 service_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      module NavSatFix_Constants {
        const octet COVARIANCE_TYPE_UNKNOWN_ = 0;
        const octet COVARIANCE_TYPE_APPROXIMATED_ = 1;
        const octet COVARIANCE_TYPE_DIAGONAL_KNOWN_ = 2;
        const octet COVARIANCE_TYPE_KNOWN_ = 3;
      };
      @appendable
      struct NavSatFix_ {
                std_msgs::msg::dds_::Header_ header_;
                sensor_msgs::msg::dds_::NavSatStatus_ status_;
                double latitude_;
                double longitude_;
                double altitude_;
                double position_covariance_[9];
                octet position_covariance_type_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Temperature_ {
                std_msgs::msg::dds_::Header_ header_;
                double temperature_;
                double variance_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Image_ {
                std_msgs::msg::dds_::Header_ header_;
                uint32 height_;
                uint32 width_;
                string<255> encoding_;
                octet is_bigendian_;
                uint32 step_;
                sequence<octet,100> data_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct JointState_ {
                std_msgs::msg::dds_::Header_ header_;
                sequence<string<255>,100 > name_;
                sequence<double,100> position_;
                sequence<double,100> velocity_;
                sequence<double,100> effort_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MagneticField_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Vector3_ magnetic_field_;
                double magnetic_field_covariance_[9];
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct RelativeHumidity_ {
                std_msgs::msg::dds_::Header_ header_;
                double relative_humidity_;
                double variance_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MultiEchoLaserScan_ {
                std_msgs::msg::dds_::Header_ header_;
                float angle_min_;
                float angle_max_;
                float angle_increment_;
                float time_increment_;
                float scan_time_;
                float range_min_;
                float range_max_;
                sequence<sensor_msgs::msg::dds_::LaserEcho_,100> ranges_;
                sequence<sensor_msgs::msg::dds_::LaserEcho_,100> intensities_;
      };

    };
  };
};
module sensor_msgs {
  module srv {
    module dds_ {
      @appendable
      struct SetCameraInfo_Request_ {
                sensor_msgs::msg::dds_::CameraInfo_ camera_info_;
      };

    };
  };
};
module sensor_msgs {
  module srv {
    module dds_ {
      @appendable
      struct SetCameraInfo_Response_ {
                boolean success_;
                string<255> status_message_;
      };

    };
  };
};
module sensor_msgs {
  module msg {
    module dds_ {
      @appendable
      struct PointCloud2_ {
                std_msgs::msg::dds_::Header_ header_;
                uint32 height_;
                uint32 width_;
                sequence<sensor_msgs::msg::dds_::PointField_,100> fields_;
                boolean is_bigendian_;
                uint32 point_step_;
                uint32 row_step_;
                sequence<octet,100> data_;
                boolean is_dense_;
      };

    };
  };
};
module map_msgs {
  module msg {
    module dds_ {
      @appendable
      struct ProjectedMap_ {
                nav_msgs::msg::dds_::OccupancyGrid_ map_;
                double min_z_;
                double max_z_;
      };

    };
  };
};
module map_msgs {
  module msg {
    module dds_ {
      @appendable
      struct ProjectedMapInfo_ {
                string<255> frame_id_;
                double x_;
                double y_;
                double width_;
                double height_;
                double min_z_;
                double max_z_;
      };

    };
  };
};
module map_msgs {
  module msg {
    module dds_ {
      @appendable
      struct OccupancyGridUpdate_ {
                std_msgs::msg::dds_::Header_ header_;
                int32 x_;
                int32 y_;
                uint32 width_;
                uint32 height_;
                sequence<octet,100> data_;
      };

    };
  };
};
module map_msgs {
  module msg {
    module dds_ {
      module PointCloud2Update_Constants {
        const uint32 ADD_ = 0;
        const uint32 DELETE_ = 1;
      };
      @appendable
      struct PointCloud2Update_ {
                std_msgs::msg::dds_::Header_ header_;
                uint32 type_;
                sensor_msgs::msg::dds_::PointCloud2_ points_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetPointMap_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetPointMap_Response_ {
                sensor_msgs::msg::dds_::PointCloud2_ map_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct ProjectedMapsInfo_Request_ {
                sequence<map_msgs::msg::dds_::ProjectedMapInfo_,100> projected_maps_info_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct ProjectedMapsInfo_Response_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct SaveMap_Request_ {
                std_msgs::msg::dds_::String_ filename_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct SaveMap_Response_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct SetMapProjections_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct SetMapProjections_Response_ {
                sequence<map_msgs::msg::dds_::ProjectedMapInfo_,100> projected_maps_info_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetPointMapROI_Request_ {
                double x_;
                double y_;
                double z_;
                double r_;
                double l_x_;
                double l_y_;
                double l_z_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetPointMapROI_Response_ {
                sensor_msgs::msg::dds_::PointCloud2_ sub_map_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetMapROI_Request_ {
                double x_;
                double y_;
                double l_x_;
                double l_y_;
      };

    };
  };
};
module map_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetMapROI_Response_ {
                nav_msgs::msg::dds_::OccupancyGrid_ sub_map_;
      };

    };
  };
};
module statistics_msgs {
  module msg {
    module dds_ {
      module StatisticDataType_Constants {
        const octet STATISTICS_DATA_TYPE_UNINITIALIZED_ = 0;
        const octet STATISTICS_DATA_TYPE_AVERAGE_ = 1;
        const octet STATISTICS_DATA_TYPE_MINIMUM_ = 2;
        const octet STATISTICS_DATA_TYPE_MAXIMUM_ = 3;
        const octet STATISTICS_DATA_TYPE_STDDEV_ = 4;
        const octet STATISTICS_DATA_TYPE_SAMPLE_COUNT_ = 5;
      };
      @appendable
      struct StatisticDataType_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module statistics_msgs {
  module msg {
    module dds_ {
      @appendable
      struct StatisticDataPoint_ {
                octet data_type_;
                double data_;
      };

    };
  };
};
module statistics_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MetricsMessage_ {
                string<255> measurement_source_name_;
                string<255> metrics_source_;
                string<255> unit_;
                builtin_interfaces::msg::dds_::Time_ window_start_;
                builtin_interfaces::msg::dds_::Time_ window_stop_;
                sequence<statistics_msgs::msg::dds_::StatisticDataPoint_,100> statistics_;
      };

    };
  };
};
module nav_msgs {
  module msg {
    module dds_ {
      @appendable
      struct GridCells_ {
                std_msgs::msg::dds_::Header_ header_;
                float cell_width_;
                float cell_height_;
                sequence<geometry_msgs::msg::dds_::Point_,100> cells_;
      };

    };
  };
};
module nav_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Path_ {
                std_msgs::msg::dds_::Header_ header_;
                sequence<geometry_msgs::msg::dds_::PoseStamped_,100> poses_;
      };

    };
  };
};
module nav_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Odometry_ {
                std_msgs::msg::dds_::Header_ header_;
                string<255> child_frame_id_;
                geometry_msgs::msg::dds_::PoseWithCovariance_ pose_;
                geometry_msgs::msg::dds_::TwistWithCovariance_ twist_;
      };

    };
  };
};
module nav_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetPlan_Request_ {
                geometry_msgs::msg::dds_::PoseStamped_ start_;
                geometry_msgs::msg::dds_::PoseStamped_ goal_;
                float tolerance_;
      };

    };
  };
};
module nav_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetPlan_Response_ {
                nav_msgs::msg::dds_::Path_ plan_;
      };

    };
  };
};
module nav_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetMap_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module nav_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetMap_Response_ {
                nav_msgs::msg::dds_::OccupancyGrid_ map_;
      };

    };
  };
};
module nav_msgs {
  module srv {
    module dds_ {
      @appendable
      struct SetMap_Request_ {
                nav_msgs::msg::dds_::OccupancyGrid_ map_;
                geometry_msgs::msg::dds_::PoseWithCovarianceStamped_ initial_pose_;
      };

    };
  };
};
module nav_msgs {
  module srv {
    module dds_ {
      @appendable
      struct SetMap_Response_ {
                boolean success_;
      };

    };
  };
};
module move_base_msgs {
  module action {
    module dds_ {
      @appendable
      struct MoveBase_Goal_ {
                geometry_msgs::msg::dds_::PoseStamped_ target_pose_;
      };

    };
  };
};
module move_base_msgs {
  module action {
    module dds_ {
      @appendable
      struct MoveBase_SendGoal_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                move_base_msgs::action::dds_::MoveBase_Goal_ goal_;
      };

    };
  };
};
module move_base_msgs {
  module action {
    module dds_ {
      @appendable
      struct MoveBase_SendGoal_Response_ {
                boolean accepted_;
                builtin_interfaces::msg::dds_::Time_ stamp_;
      };

    };
  };
};
module move_base_msgs {
  module action {
    module dds_ {
      @appendable
      struct MoveBase_Result_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module move_base_msgs {
  module action {
    module dds_ {
      @appendable
      struct MoveBase_GetResult_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
      };

    };
  };
};
module move_base_msgs {
  module action {
    module dds_ {
      @appendable
      struct MoveBase_GetResult_Response_ {
                octet status_;
                move_base_msgs::action::dds_::MoveBase_Result_ result_;
      };

    };
  };
};
module move_base_msgs {
  module action {
    module dds_ {
      @appendable
      struct MoveBase_Feedback_ {
                geometry_msgs::msg::dds_::PoseStamped_ base_position_;
      };

    };
  };
};
module move_base_msgs {
  module action {
    module dds_ {
      @appendable
      struct MoveBase_FeedbackMessage_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                move_base_msgs::action::dds_::MoveBase_Feedback_ feedback_;
      };

    };
  };
};
module rmw_dds_common {
  module msg {
    module dds_ {
      @appendable
      struct Gid_ {
                octet data_[24];
      };

    };
  };
};
module rmw_dds_common {
  module msg {
    module dds_ {
      @appendable
      struct NodeEntitiesInfo_ {
                string<256> node_namespace_;
                string<256> node_name_;
                sequence<rmw_dds_common::msg::dds_::Gid_,100> reader_gid_seq_;
                sequence<rmw_dds_common::msg::dds_::Gid_,100> writer_gid_seq_;
      };

    };
  };
};
module rmw_dds_common {
  module msg {
    module dds_ {
      @appendable
      struct ParticipantEntitiesInfo_ {
                rmw_dds_common::msg::dds_::Gid_ gid_;
                sequence<rmw_dds_common::msg::dds_::NodeEntitiesInfo_,100> node_entities_info_seq_;
      };

    };
  };
};
module stereo_msgs {
  module msg {
    module dds_ {
      @appendable
      struct DisparityImage_ {
                std_msgs::msg::dds_::Header_ header_;
                sensor_msgs::msg::dds_::Image_ image_;
                float f_;
                float t_;
                sensor_msgs::msg::dds_::RegionOfInterest_ valid_window_;
                float min_disparity_;
                float max_disparity_;
                float delta_d_;
      };

    };
  };
};
module rosgraph_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Clock_ {
                builtin_interfaces::msg::dds_::Time_ clock_;
      };

    };
  };
};
module actionlib_msgs {
  module msg {
    module dds_ {
      @appendable
      struct GoalID_ {
                builtin_interfaces::msg::dds_::Time_ stamp_;
                string<255> id_;
      };

    };
  };
};
module actionlib_msgs {
  module msg {
    module dds_ {
      module GoalStatus_Constants {
        const octet PENDING_ = 0;
        const octet ACTIVE_ = 1;
        const octet PREEMPTED_ = 2;
        const octet SUCCEEDED_ = 3;
        const octet ABORTED_ = 4;
        const octet REJECTED_ = 5;
        const octet PREEMPTING_ = 6;
        const octet RECALLING_ = 7;
        const octet RECALLED_ = 8;
        const octet LOST_ = 9;
      };
      @appendable
      struct GoalStatus_ {
                actionlib_msgs::msg::dds_::GoalID_ goal_id_;
                octet status_;
                string<255> text_;
      };

    };
  };
};
module actionlib_msgs {
  module msg {
    module dds_ {
      @appendable
      struct GoalStatusArray_ {
                std_msgs::msg::dds_::Header_ header_;
                sequence<actionlib_msgs::msg::dds_::GoalStatus_,100> status_list_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Defaults_ {
                boolean bool_value_;
                octet byte_value_;
                octet char_value_;
                float float32_value_;
                double float64_value_;
                octet int8_value_;
                octet uint8_value_;
                int16 int16_value_;
                uint16 uint16_value_;
                int32 int32_value_;
                uint32 uint32_value_;
                int64 int64_value_;
                uint64 uint64_value_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Empty_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      @appendable
      struct BasicTypes_ {
                boolean bool_value_;
                octet byte_value_;
                octet char_value_;
                float float32_value_;
                double float64_value_;
                octet int8_value_;
                octet uint8_value_;
                int16 int16_value_;
                uint16 uint16_value_;
                int32 int32_value_;
                uint32 uint32_value_;
                int64 int64_value_;
                uint64 uint64_value_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      module Constants_Constants {
        const boolean BOOL_CONST_ = TRUE;
        const octet BYTE_CONST_ = 50;
        const octet CHAR_CONST_ = 100;
        const float FLOAT32_CONST_ = 1.125000;
        const double FLOAT64_CONST_ = 1.125000;
        const octet INT8_CONST_ = 206;
        const octet UINT8_CONST_ = 200;
        const int16 INT16_CONST_ = -1000;
        const uint16 UINT16_CONST_ = 2000;
        const int32 INT32_CONST_ = -30000;
        const uint32 UINT32_CONST_ = 60000;
        const int64 INT64_CONST_ = -40000000;
        const uint64 UINT64_CONST_ = 50000000;
      };
      @appendable
      struct Constants_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Arrays_ {
                boolean bool_values_[3];
                octet byte_values_[3];
                octet char_values_[3];
                float float32_values_[3];
                double float64_values_[3];
                octet int8_values_[3];
                octet uint8_values_[3];
                int16 int16_values_[3];
                uint16 uint16_values_[3];
                int32 int32_values_[3];
                uint32 uint32_values_[3];
                int64 int64_values_[3];
                uint64 uint64_values_[3];
                string<255> string_values_[3];
                test_msgs::msg::dds_::BasicTypes_ basic_types_values_[3];
                test_msgs::msg::dds_::Constants_ constants_values_[3];
                test_msgs::msg::dds_::Defaults_ defaults_values_[3];
                boolean bool_values_default_[3];
                octet byte_values_default_[3];
                octet char_values_default_[3];
                float float32_values_default_[3];
                double float64_values_default_[3];
                octet int8_values_default_[3];
                octet uint8_values_default_[3];
                int16 int16_values_default_[3];
                uint16 uint16_values_default_[3];
                int32 int32_values_default_[3];
                uint32 uint32_values_default_[3];
                int64 int64_values_default_[3];
                uint64 uint64_values_default_[3];
                string<255> string_values_default_[3];
                int32 alignment_check_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      @appendable
      struct UnboundedSequences_ {
                sequence<boolean,100> bool_values_;
                sequence<octet,100> byte_values_;
                sequence<octet,100> char_values_;
                sequence<float,100> float32_values_;
                sequence<double,100> float64_values_;
                sequence<octet,100> int8_values_;
                sequence<octet,100> uint8_values_;
                sequence<int16,100> int16_values_;
                sequence<uint16,100> uint16_values_;
                sequence<int32,100> int32_values_;
                sequence<uint32,100> uint32_values_;
                sequence<int64,100> int64_values_;
                sequence<uint64,100> uint64_values_;
                sequence<string<255>,100 > string_values_;
                sequence<test_msgs::msg::dds_::BasicTypes_,100> basic_types_values_;
                sequence<test_msgs::msg::dds_::Constants_,100> constants_values_;
                sequence<test_msgs::msg::dds_::Defaults_,100> defaults_values_;
                sequence<boolean,100> bool_values_default_;
                sequence<octet,100> byte_values_default_;
                sequence<octet,100> char_values_default_;
                sequence<float,100> float32_values_default_;
                sequence<double,100> float64_values_default_;
                sequence<octet,100> int8_values_default_;
                sequence<octet,100> uint8_values_default_;
                sequence<int16,100> int16_values_default_;
                sequence<uint16,100> uint16_values_default_;
                sequence<int32,100> int32_values_default_;
                sequence<uint32,100> uint32_values_default_;
                sequence<int64,100> int64_values_default_;
                sequence<uint64,100> uint64_values_default_;
                sequence<string<255>,100 > string_values_default_;
                int32 alignment_check_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      @appendable
      struct BoundedSequences_ {
                sequence<boolean,3> bool_values_;
                sequence<octet,3> byte_values_;
                sequence<octet,3> char_values_;
                sequence<float,3> float32_values_;
                sequence<double,3> float64_values_;
                sequence<octet,3> int8_values_;
                sequence<octet,3> uint8_values_;
                sequence<int16,3> int16_values_;
                sequence<uint16,3> uint16_values_;
                sequence<int32,3> int32_values_;
                sequence<uint32,3> uint32_values_;
                sequence<int64,3> int64_values_;
                sequence<uint64,3> uint64_values_;
                sequence<string<255>,3 > string_values_;
                sequence<test_msgs::msg::dds_::BasicTypes_,3> basic_types_values_;
                sequence<test_msgs::msg::dds_::Constants_,3> constants_values_;
                sequence<test_msgs::msg::dds_::Defaults_,3> defaults_values_;
                sequence<boolean,3> bool_values_default_;
                sequence<octet,3> byte_values_default_;
                sequence<octet,3> char_values_default_;
                sequence<float,3> float32_values_default_;
                sequence<double,3> float64_values_default_;
                sequence<octet,3> int8_values_default_;
                sequence<octet,3> uint8_values_default_;
                sequence<int16,3> int16_values_default_;
                sequence<uint16,3> uint16_values_default_;
                sequence<int32,3> int32_values_default_;
                sequence<uint32,3> uint32_values_default_;
                sequence<int64,3> int64_values_default_;
                sequence<uint64,3> uint64_values_default_;
                sequence<string<255>,3 > string_values_default_;
                int32 alignment_check_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      @appendable
      struct WStrings_ {
                wstring<255> wstring_value_;
                wstring<255> wstring_value_default1_;
                wstring<255> wstring_value_default2_;
                wstring<255> wstring_value_default3_;
                wstring<255> array_of_wstrings_[3];
                sequence<wstring<255>,3 > bounded_sequence_of_wstrings_;
                sequence<wstring<255>,100 > unbounded_sequence_of_wstrings_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Nested_ {
                test_msgs::msg::dds_::BasicTypes_ basic_types_value_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Builtins_ {
                builtin_interfaces::msg::dds_::Duration_ duration_value_;
                builtin_interfaces::msg::dds_::Time_ time_value_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      module Strings_Constants {
        const string STRING_CONST_ = "Hello world!";
      };
      @appendable
      struct Strings_ {
                string<255> string_value_;
                string<255> string_value_default1_;
                string<255> string_value_default2_;
                string<255> string_value_default3_;
                string<255> string_value_default4_;
                string<255> string_value_default5_;
                string<22> bounded_string_value_;
                string<22> bounded_string_value_default1_;
                string<22> bounded_string_value_default2_;
                string<22> bounded_string_value_default3_;
                string<22> bounded_string_value_default4_;
                string<22> bounded_string_value_default5_;
      };

    };
  };
};
module test_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MultiNested_ {
                test_msgs::msg::dds_::Arrays_ array_of_arrays_[3];
                test_msgs::msg::dds_::BoundedSequences_ array_of_bounded_sequences_[3];
                test_msgs::msg::dds_::UnboundedSequences_ array_of_unbounded_sequences_[3];
                sequence<test_msgs::msg::dds_::Arrays_,3> bounded_sequence_of_arrays_;
                sequence<test_msgs::msg::dds_::BoundedSequences_,3> bounded_sequence_of_bounded_sequences_;
                sequence<test_msgs::msg::dds_::UnboundedSequences_,3> bounded_sequence_of_unbounded_sequences_;
                sequence<test_msgs::msg::dds_::Arrays_,100> unbounded_sequence_of_arrays_;
                sequence<test_msgs::msg::dds_::BoundedSequences_,100> unbounded_sequence_of_bounded_sequences_;
                sequence<test_msgs::msg::dds_::UnboundedSequences_,100> unbounded_sequence_of_unbounded_sequences_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct NestedMessage_Goal_ {
                test_msgs::msg::dds_::Builtins_ nested_field_no_pkg_;
                test_msgs::msg::dds_::BasicTypes_ nested_field_;
                builtin_interfaces::msg::dds_::Time_ nested_different_pkg_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct NestedMessage_SendGoal_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                test_msgs::action::dds_::NestedMessage_Goal_ goal_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct NestedMessage_SendGoal_Response_ {
                boolean accepted_;
                builtin_interfaces::msg::dds_::Time_ stamp_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct NestedMessage_Result_ {
                test_msgs::msg::dds_::Builtins_ nested_field_no_pkg_;
                test_msgs::msg::dds_::BasicTypes_ nested_field_;
                builtin_interfaces::msg::dds_::Time_ nested_different_pkg_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct NestedMessage_GetResult_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct NestedMessage_GetResult_Response_ {
                octet status_;
                test_msgs::action::dds_::NestedMessage_Result_ result_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct NestedMessage_Feedback_ {
                test_msgs::msg::dds_::Builtins_ nested_field_no_pkg_;
                test_msgs::msg::dds_::BasicTypes_ nested_field_;
                builtin_interfaces::msg::dds_::Time_ nested_different_pkg_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct NestedMessage_FeedbackMessage_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                test_msgs::action::dds_::NestedMessage_Feedback_ feedback_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_Goal_ {
                int32 order_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_SendGoal_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                test_msgs::action::dds_::Fibonacci_Goal_ goal_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_SendGoal_Response_ {
                boolean accepted_;
                builtin_interfaces::msg::dds_::Time_ stamp_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_Result_ {
                sequence<int32,100> sequence_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_GetResult_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_GetResult_Response_ {
                octet status_;
                test_msgs::action::dds_::Fibonacci_Result_ result_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_Feedback_ {
                sequence<int32,100> sequence_;
      };

    };
  };
};
module test_msgs {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_FeedbackMessage_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                test_msgs::action::dds_::Fibonacci_Feedback_ feedback_;
      };

    };
  };
};
module test_msgs {
  module srv {
    module dds_ {
      @appendable
      struct Empty_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module test_msgs {
  module srv {
    module dds_ {
      @appendable
      struct Empty_Response_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module test_msgs {
  module srv {
    module dds_ {
      @appendable
      struct Arrays_Request_ {
                boolean bool_values_[3];
                octet byte_values_[3];
                octet char_values_[3];
                float float32_values_[3];
                double float64_values_[3];
                octet int8_values_[3];
                octet uint8_values_[3];
                int16 int16_values_[3];
                uint16 uint16_values_[3];
                int32 int32_values_[3];
                uint32 uint32_values_[3];
                int64 int64_values_[3];
                uint64 uint64_values_[3];
                string<255> string_values_[3];
                test_msgs::msg::dds_::BasicTypes_ basic_types_values_[3];
                test_msgs::msg::dds_::Constants_ constants_values_[3];
                test_msgs::msg::dds_::Defaults_ defaults_values_[3];
                boolean bool_values_default_[3];
                octet byte_values_default_[3];
                octet char_values_default_[3];
                float float32_values_default_[3];
                double float64_values_default_[3];
                octet int8_values_default_[3];
                octet uint8_values_default_[3];
                int16 int16_values_default_[3];
                uint16 uint16_values_default_[3];
                int32 int32_values_default_[3];
                uint32 uint32_values_default_[3];
                int64 int64_values_default_[3];
                uint64 uint64_values_default_[3];
                string<255> string_values_default_[3];
      };

    };
  };
};
module test_msgs {
  module srv {
    module dds_ {
      @appendable
      struct Arrays_Response_ {
                boolean bool_values_[3];
                octet byte_values_[3];
                octet char_values_[3];
                float float32_values_[3];
                double float64_values_[3];
                octet int8_values_[3];
                octet uint8_values_[3];
                int16 int16_values_[3];
                uint16 uint16_values_[3];
                int32 int32_values_[3];
                uint32 uint32_values_[3];
                int64 int64_values_[3];
                uint64 uint64_values_[3];
                string<255> string_values_[3];
                test_msgs::msg::dds_::BasicTypes_ basic_types_values_[3];
                test_msgs::msg::dds_::Constants_ constants_values_[3];
                test_msgs::msg::dds_::Defaults_ defaults_values_[3];
                boolean bool_values_default_[3];
                octet byte_values_default_[3];
                octet char_values_default_[3];
                float float32_values_default_[3];
                double float64_values_default_[3];
                octet int8_values_default_[3];
                octet uint8_values_default_[3];
                int16 int16_values_default_[3];
                uint16 uint16_values_default_[3];
                int32 int32_values_default_[3];
                uint32 uint32_values_default_[3];
                int64 int64_values_default_[3];
                uint64 uint64_values_default_[3];
                string<255> string_values_default_[3];
      };

    };
  };
};
module test_msgs {
  module srv {
    module dds_ {
      @appendable
      struct BasicTypes_Request_ {
                boolean bool_value_;
                octet byte_value_;
                octet char_value_;
                float float32_value_;
                double float64_value_;
                octet int8_value_;
                octet uint8_value_;
                int16 int16_value_;
                uint16 uint16_value_;
                int32 int32_value_;
                uint32 uint32_value_;
                int64 int64_value_;
                uint64 uint64_value_;
                string<255> string_value_;
      };

    };
  };
};
module test_msgs {
  module srv {
    module dds_ {
      @appendable
      struct BasicTypes_Response_ {
                boolean bool_value_;
                octet byte_value_;
                octet char_value_;
                float float32_value_;
                double float64_value_;
                octet int8_value_;
                octet uint8_value_;
                int16 int16_value_;
                uint16 uint16_value_;
                int32 int32_value_;
                uint32 uint32_value_;
                int64 int64_value_;
                uint64 uint64_value_;
                string<255> string_value_;
      };

    };
  };
};
module visualization_msgs {
  module msg {
    module dds_ {
      @appendable
      struct InteractiveMarkerPose_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Pose_ pose_;
                string<255> name_;
      };

    };
  };
};
module visualization_msgs {
  module msg {
    module dds_ {
      module MenuEntry_Constants {
        const octet FEEDBACK_ = 0;
        const octet ROSRUN_ = 1;
        const octet ROSLAUNCH_ = 2;
      };
      @appendable
      struct MenuEntry_ {
                uint32 id_;
                uint32 parent_id_;
                string<255> title_;
                string<255> command_;
                octet command_type_;
      };

    };
  };
};
module visualization_msgs {
  module msg {
    module dds_ {
      module Marker_Constants {
        const int32 ARROW_ = 0;
        const int32 CUBE_ = 1;
        const int32 SPHERE_ = 2;
        const int32 CYLINDER_ = 3;
        const int32 LINE_STRIP_ = 4;
        const int32 LINE_LIST_ = 5;
        const int32 CUBE_LIST_ = 6;
        const int32 SPHERE_LIST_ = 7;
        const int32 POINTS_ = 8;
        const int32 TEXT_VIEW_FACING_ = 9;
        const int32 MESH_RESOURCE_ = 10;
        const int32 TRIANGLE_LIST_ = 11;
        const int32 ADD_ = 0;
        const int32 MODIFY_ = 0;
        const int32 DELETE_ = 2;
        const int32 DELETEALL_ = 3;
      };
      @appendable
      struct Marker_ {
                std_msgs::msg::dds_::Header_ header_;
                string<255> ns_;
                int32 id_;
                int32 type_;
                int32 action_;
                geometry_msgs::msg::dds_::Pose_ pose_;
                geometry_msgs::msg::dds_::Vector3_ scale_;
                std_msgs::msg::dds_::ColorRGBA_ color_;
                builtin_interfaces::msg::dds_::Duration_ lifetime_;
                boolean frame_locked_;
                sequence<geometry_msgs::msg::dds_::Point_,100> points_;
                sequence<std_msgs::msg::dds_::ColorRGBA_,100> colors_;
                string<255> text_;
                string<255> mesh_resource_;
                boolean mesh_use_embedded_materials_;
      };

    };
  };
};
module visualization_msgs {
  module msg {
    module dds_ {
      module InteractiveMarkerControl_Constants {
        const octet INHERIT_ = 0;
        const octet FIXED_ = 1;
        const octet VIEW_FACING_ = 2;
        const octet NONE_ = 0;
        const octet MENU_ = 1;
        const octet BUTTON_ = 2;
        const octet MOVE_AXIS_ = 3;
        const octet MOVE_PLANE_ = 4;
        const octet ROTATE_AXIS_ = 5;
        const octet MOVE_ROTATE_ = 6;
        const octet MOVE_3D_ = 7;
        const octet ROTATE_3D_ = 8;
        const octet MOVE_ROTATE_3D_ = 9;
      };
      @appendable
      struct InteractiveMarkerControl_ {
                string<255> name_;
                geometry_msgs::msg::dds_::Quaternion_ orientation_;
                octet orientation_mode_;
                octet interaction_mode_;
                boolean always_visible_;
                sequence<visualization_msgs::msg::dds_::Marker_,100> markers_;
                boolean independent_marker_orientation_;
                string<255> description_;
      };

    };
  };
};
module visualization_msgs {
  module msg {
    module dds_ {
      @appendable
      struct InteractiveMarker_ {
                std_msgs::msg::dds_::Header_ header_;
                geometry_msgs::msg::dds_::Pose_ pose_;
                string<255> name_;
                string<255> description_;
                float scale_;
                sequence<visualization_msgs::msg::dds_::MenuEntry_,100> menu_entries_;
                sequence<visualization_msgs::msg::dds_::InteractiveMarkerControl_,100> controls_;
      };

    };
  };
};
module visualization_msgs {
  module msg {
    module dds_ {
      module InteractiveMarkerFeedback_Constants {
        const octet KEEP_ALIVE_ = 0;
        const octet POSE_UPDATE_ = 1;
        const octet MENU_SELECT_ = 2;
        const octet BUTTON_CLICK_ = 3;
        const octet MOUSE_DOWN_ = 4;
        const octet MOUSE_UP_ = 5;
      };
      @appendable
      struct InteractiveMarkerFeedback_ {
                std_msgs::msg::dds_::Header_ header_;
                string<255> client_id_;
                string<255> marker_name_;
                string<255> control_name_;
                octet event_type_;
                geometry_msgs::msg::dds_::Pose_ pose_;
                uint32 menu_entry_id_;
                geometry_msgs::msg::dds_::Point_ mouse_point_;
                boolean mouse_point_valid_;
      };

    };
  };
};
module visualization_msgs {
  module msg {
    module dds_ {
      @appendable
      struct InteractiveMarkerInit_ {
                string<255> server_id_;
                uint64 seq_num_;
                sequence<visualization_msgs::msg::dds_::InteractiveMarker_,100> markers_;
      };

    };
  };
};
module visualization_msgs {
  module msg {
    module dds_ {
      module InteractiveMarkerUpdate_Constants {
        const octet KEEP_ALIVE_ = 0;
        const octet UPDATE_ = 1;
      };
      @appendable
      struct InteractiveMarkerUpdate_ {
                string<255> server_id_;
                uint64 seq_num_;
                octet type_;
                sequence<visualization_msgs::msg::dds_::InteractiveMarker_,100> markers_;
                sequence<visualization_msgs::msg::dds_::InteractiveMarkerPose_,100> poses_;
                sequence<string<255>,100 > erases_;
      };

    };
  };
};
module visualization_msgs {
  module msg {
    module dds_ {
      module ImageMarker_Constants {
        const int32 CIRCLE_ = 0;
        const int32 LINE_STRIP_ = 1;
        const int32 LINE_LIST_ = 2;
        const int32 POLYGON_ = 3;
        const int32 POINTS_ = 4;
        const int32 ADD_ = 0;
        const int32 REMOVE_ = 1;
      };
      @appendable
      struct ImageMarker_ {
                std_msgs::msg::dds_::Header_ header_;
                string<255> ns_;
                int32 id_;
                int32 type_;
                int32 action_;
                geometry_msgs::msg::dds_::Point_ position_;
                float scale_;
                std_msgs::msg::dds_::ColorRGBA_ outline_color_;
                octet filled_;
                std_msgs::msg::dds_::ColorRGBA_ fill_color_;
                builtin_interfaces::msg::dds_::Duration_ lifetime_;
                sequence<geometry_msgs::msg::dds_::Point_,100> points_;
                sequence<std_msgs::msg::dds_::ColorRGBA_,100> outline_colors_;
      };

    };
  };
};
module visualization_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MarkerArray_ {
                sequence<visualization_msgs::msg::dds_::Marker_,100> markers_;
      };

    };
  };
};
module visualization_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetInteractiveMarkers_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module visualization_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetInteractiveMarkers_Response_ {
                uint64 sequence_number_;
                sequence<visualization_msgs::msg::dds_::InteractiveMarker_,100> markers_;
      };

    };
  };
};
module action_msgs {
  module msg {
    module dds_ {
      @appendable
      struct GoalInfo_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                builtin_interfaces::msg::dds_::Time_ stamp_;
      };

    };
  };
};
module action_msgs {
  module msg {
    module dds_ {
      module GoalStatus_Constants {
        const octet STATUS_UNKNOWN_ = 0;
        const octet STATUS_ACCEPTED_ = 1;
        const octet STATUS_EXECUTING_ = 2;
        const octet STATUS_CANCELING_ = 3;
        const octet STATUS_SUCCEEDED_ = 4;
        const octet STATUS_CANCELED_ = 5;
        const octet STATUS_ABORTED_ = 6;
      };
      @appendable
      struct GoalStatus_ {
                action_msgs::msg::dds_::GoalInfo_ goal_info_;
                octet status_;
      };

    };
  };
};
module action_msgs {
  module msg {
    module dds_ {
      @appendable
      struct GoalStatusArray_ {
                sequence<action_msgs::msg::dds_::GoalStatus_,100> status_list_;
      };

    };
  };
};
module action_msgs {
  module srv {
    module dds_ {
      @appendable
      struct CancelGoal_Request_ {
                action_msgs::msg::dds_::GoalInfo_ goal_info_;
      };

    };
  };
};
module action_msgs {
  module srv {
    module dds_ {
      module CancelGoal_Response_Constants {
        const octet ERROR_NONE_ = 0;
        const octet ERROR_REJECTED_ = 1;
        const octet ERROR_UNKNOWN_GOAL_ID_ = 2;
        const octet ERROR_GOAL_TERMINATED_ = 3;
      };
      @appendable
      struct CancelGoal_Response_ {
                octet return_code_;
                sequence<action_msgs::msg::dds_::GoalInfo_,100> goals_canceling_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct SetParametersResult_ {
                boolean successful_;
                string<255> reason_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct IntegerRange_ {
                int64 from_value_;
                int64 to_value_;
                uint64 step_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      module ParameterType_Constants {
        const octet PARAMETER_NOT_SET_ = 0;
        const octet PARAMETER_BOOL_ = 1;
        const octet PARAMETER_INTEGER_ = 2;
        const octet PARAMETER_DOUBLE_ = 3;
        const octet PARAMETER_STRING_ = 4;
        const octet PARAMETER_BYTE_ARRAY_ = 5;
        const octet PARAMETER_BOOL_ARRAY_ = 6;
        const octet PARAMETER_INTEGER_ARRAY_ = 7;
        const octet PARAMETER_DOUBLE_ARRAY_ = 8;
        const octet PARAMETER_STRING_ARRAY_ = 9;
      };
      @appendable
      struct ParameterType_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct FloatingPointRange_ {
                double from_value_;
                double to_value_;
                double step_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct ParameterDescriptor_ {
                string<255> name_;
                octet type_;
                string<255> description_;
                string<255> additional_constraints_;
                boolean read_only_;
                sequence<rcl_interfaces::msg::dds_::FloatingPointRange_,1> floating_point_range_;
                sequence<rcl_interfaces::msg::dds_::IntegerRange_,1> integer_range_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct ParameterEventDescriptors_ {
                sequence<rcl_interfaces::msg::dds_::ParameterDescriptor_,100> new_parameters_;
                sequence<rcl_interfaces::msg::dds_::ParameterDescriptor_,100> changed_parameters_;
                sequence<rcl_interfaces::msg::dds_::ParameterDescriptor_,100> deleted_parameters_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      module Log_Constants {
        const octet DEBUG_ = 10;
        const octet INFO_ = 20;
        const octet WARN_ = 30;
        const octet ERROR_ = 40;
        const octet FATAL_ = 50;
      };
      @appendable
      struct Log_ {
                builtin_interfaces::msg::dds_::Time_ stamp_;
                octet level_;
                string<255> name_;
                string<255> msg_;
                string<255> file_;
                string<255> function_;
                uint32 line_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct ParameterValue_ {
                octet type_;
                boolean bool_value_;
                int64 integer_value_;
                double double_value_;
                string<255> string_value_;
                sequence<octet,100> byte_array_value_;
                sequence<boolean,100> bool_array_value_;
                sequence<int64,100> integer_array_value_;
                sequence<double,100> double_array_value_;
                sequence<string<255>,100 > string_array_value_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct Parameter_ {
                string<255> name_;
                rcl_interfaces::msg::dds_::ParameterValue_ value_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct ListParametersResult_ {
                sequence<string<255>,100 > names_;
                sequence<string<255>,100 > prefixes_;
      };

    };
  };
};
module rcl_interfaces {
  module msg {
    module dds_ {
      @appendable
      struct ParameterEvent_ {
                builtin_interfaces::msg::dds_::Time_ stamp_;
                string<255> node_;
                sequence<rcl_interfaces::msg::dds_::Parameter_,100> new_parameters_;
                sequence<rcl_interfaces::msg::dds_::Parameter_,100> changed_parameters_;
                sequence<rcl_interfaces::msg::dds_::Parameter_,100> deleted_parameters_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct GetParameters_Request_ {
                sequence<string<255>,100 > names_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct GetParameters_Response_ {
                sequence<rcl_interfaces::msg::dds_::ParameterValue_,100> values_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct GetParameterTypes_Request_ {
                sequence<string<255>,100 > names_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct GetParameterTypes_Response_ {
                sequence<octet,100> types_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct SetParametersAtomically_Request_ {
                sequence<rcl_interfaces::msg::dds_::Parameter_,100> parameters_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct SetParametersAtomically_Response_ {
                rcl_interfaces::msg::dds_::SetParametersResult_ result_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct DescribeParameters_Request_ {
                sequence<string<255>,100 > names_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct DescribeParameters_Response_ {
                sequence<rcl_interfaces::msg::dds_::ParameterDescriptor_,100> descriptors_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      module ListParameters_Request_Constants {
        const uint64 DEPTH_RECURSIVE_ = 0;
      };
      @appendable
      struct ListParameters_Request_ {
                sequence<string<255>,100 > prefixes_;
                uint64 depth_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct ListParameters_Response_ {
                rcl_interfaces::msg::dds_::ListParametersResult_ result_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct SetParameters_Request_ {
                sequence<rcl_interfaces::msg::dds_::Parameter_,100> parameters_;
      };

    };
  };
};
module rcl_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct SetParameters_Response_ {
                sequence<rcl_interfaces::msg::dds_::SetParametersResult_,100> results_;
      };

    };
  };
};
module composition_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct UnloadNode_Request_ {
                uint64 unique_id_;
      };

    };
  };
};
module composition_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct UnloadNode_Response_ {
                boolean success_;
                string<255> error_message_;
      };

    };
  };
};
module composition_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct LoadNode_Request_ {
                string<255> package_name_;
                string<255> plugin_name_;
                string<255> node_name_;
                string<255> node_namespace_;
                octet log_level_;
                sequence<string<255>,100 > remap_rules_;
                sequence<rcl_interfaces::msg::dds_::Parameter_,100> parameters_;
                sequence<rcl_interfaces::msg::dds_::Parameter_,100> extra_arguments_;
      };

    };
  };
};
module composition_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct LoadNode_Response_ {
                boolean success_;
                string<255> error_message_;
                string<255> full_node_name_;
                uint64 unique_id_;
      };

    };
  };
};
module composition_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct ListNodes_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module composition_interfaces {
  module srv {
    module dds_ {
      @appendable
      struct ListNodes_Response_ {
                sequence<string<255>,100 > full_node_names_;
                sequence<uint64,100> unique_ids_;
      };

    };
  };
};
module turtlesim {
  module msg {
    module dds_ {
      @appendable
      struct Pose_ {
                float x_;
                float y_;
                float theta_;
                float linear_velocity_;
                float angular_velocity_;
      };

    };
  };
};
module turtlesim {
  module msg {
    module dds_ {
      @appendable
      struct Color_ {
                octet r_;
                octet g_;
                octet b_;
      };

    };
  };
};
module turtlesim {
  module action {
    module dds_ {
      @appendable
      struct RotateAbsolute_Goal_ {
                float theta_;
      };

    };
  };
};
module turtlesim {
  module action {
    module dds_ {
      @appendable
      struct RotateAbsolute_SendGoal_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                turtlesim::action::dds_::RotateAbsolute_Goal_ goal_;
      };

    };
  };
};
module turtlesim {
  module action {
    module dds_ {
      @appendable
      struct RotateAbsolute_SendGoal_Response_ {
                boolean accepted_;
                builtin_interfaces::msg::dds_::Time_ stamp_;
      };

    };
  };
};
module turtlesim {
  module action {
    module dds_ {
      @appendable
      struct RotateAbsolute_Result_ {
                float delta_;
      };

    };
  };
};
module turtlesim {
  module action {
    module dds_ {
      @appendable
      struct RotateAbsolute_GetResult_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
      };

    };
  };
};
module turtlesim {
  module action {
    module dds_ {
      @appendable
      struct RotateAbsolute_GetResult_Response_ {
                octet status_;
                turtlesim::action::dds_::RotateAbsolute_Result_ result_;
      };

    };
  };
};
module turtlesim {
  module action {
    module dds_ {
      @appendable
      struct RotateAbsolute_Feedback_ {
                float remaining_;
      };

    };
  };
};
module turtlesim {
  module action {
    module dds_ {
      @appendable
      struct RotateAbsolute_FeedbackMessage_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                turtlesim::action::dds_::RotateAbsolute_Feedback_ feedback_;
      };

    };
  };
};
module turtlesim {
  module srv {
    module dds_ {
      @appendable
      struct SetPen_Request_ {
                octet r_;
                octet g_;
                octet b_;
                octet width_;
                octet off_;
      };

    };
  };
};
module turtlesim {
  module srv {
    module dds_ {
      @appendable
      struct SetPen_Response_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module turtlesim {
  module srv {
    module dds_ {
      @appendable
      struct TeleportRelative_Request_ {
                float linear_;
                float angular_;
      };

    };
  };
};
module turtlesim {
  module srv {
    module dds_ {
      @appendable
      struct TeleportRelative_Response_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module turtlesim {
  module srv {
    module dds_ {
      @appendable
      struct TeleportAbsolute_Request_ {
                float x_;
                float y_;
                float theta_;
      };

    };
  };
};
module turtlesim {
  module srv {
    module dds_ {
      @appendable
      struct TeleportAbsolute_Response_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module turtlesim {
  module srv {
    module dds_ {
      @appendable
      struct Spawn_Request_ {
                float x_;
                float y_;
                float theta_;
                string<255> name_;
      };

    };
  };
};
module turtlesim {
  module srv {
    module dds_ {
      @appendable
      struct Spawn_Response_ {
                string<255> name_;
      };

    };
  };
};
module turtlesim {
  module srv {
    module dds_ {
      @appendable
      struct Kill_Request_ {
                string<255> name_;
      };

    };
  };
};
module turtlesim {
  module srv {
    module dds_ {
      @appendable
      struct Kill_Response_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module trajectory_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MultiDOFJointTrajectoryPoint_ {
                sequence<geometry_msgs::msg::dds_::Transform_,100> transforms_;
                sequence<geometry_msgs::msg::dds_::Twist_,100> velocities_;
                sequence<geometry_msgs::msg::dds_::Twist_,100> accelerations_;
                builtin_interfaces::msg::dds_::Duration_ time_from_start_;
      };

    };
  };
};
module trajectory_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MultiDOFJointTrajectory_ {
                std_msgs::msg::dds_::Header_ header_;
                sequence<string<255>,100 > joint_names_;
                sequence<trajectory_msgs::msg::dds_::MultiDOFJointTrajectoryPoint_,100> points_;
      };

    };
  };
};
module trajectory_msgs {
  module msg {
    module dds_ {
      @appendable
      struct JointTrajectoryPoint_ {
                sequence<double,100> positions_;
                sequence<double,100> velocities_;
                sequence<double,100> accelerations_;
                sequence<double,100> effort_;
                builtin_interfaces::msg::dds_::Duration_ time_from_start_;
      };

    };
  };
};
module trajectory_msgs {
  module msg {
    module dds_ {
      @appendable
      struct JointTrajectory_ {
                std_msgs::msg::dds_::Header_ header_;
                sequence<string<255>,100 > joint_names_;
                sequence<trajectory_msgs::msg::dds_::JointTrajectoryPoint_,100> points_;
      };

    };
  };
};
module test_rclcpp {
  module msg {
    module dds_ {
      @appendable
      struct UInt32_ {
                uint32 data_;
      };

    };
  };
};
module test_rclcpp {
  module srv {
    module dds_ {
      @appendable
      struct AddTwoInts_Request_ {
                int64 a_;
                int64 b_;
      };

    };
  };
};
module test_rclcpp {
  module srv {
    module dds_ {
      @appendable
      struct AddTwoInts_Response_ {
                int64 sum_;
      };

    };
  };
};
module lifecycle_msgs {
  module msg {
    module dds_ {
      module Transition_Constants {
        const octet TRANSITION_CREATE_ = 0;
        const octet TRANSITION_CONFIGURE_ = 1;
        const octet TRANSITION_CLEANUP_ = 2;
        const octet TRANSITION_ACTIVATE_ = 3;
        const octet TRANSITION_DEACTIVATE_ = 4;
        const octet TRANSITION_UNCONFIGURED_SHUTDOWN_ = 5;
        const octet TRANSITION_INACTIVE_SHUTDOWN_ = 6;
        const octet TRANSITION_ACTIVE_SHUTDOWN_ = 7;
        const octet TRANSITION_DESTROY_ = 8;
        const octet TRANSITION_ON_CONFIGURE_SUCCESS_ = 10;
        const octet TRANSITION_ON_CONFIGURE_FAILURE_ = 11;
        const octet TRANSITION_ON_CONFIGURE_ERROR_ = 12;
        const octet TRANSITION_ON_CLEANUP_SUCCESS_ = 20;
        const octet TRANSITION_ON_CLEANUP_FAILURE_ = 21;
        const octet TRANSITION_ON_CLEANUP_ERROR_ = 22;
        const octet TRANSITION_ON_ACTIVATE_SUCCESS_ = 30;
        const octet TRANSITION_ON_ACTIVATE_FAILURE_ = 31;
        const octet TRANSITION_ON_ACTIVATE_ERROR_ = 32;
        const octet TRANSITION_ON_DEACTIVATE_SUCCESS_ = 40;
        const octet TRANSITION_ON_DEACTIVATE_FAILURE_ = 41;
        const octet TRANSITION_ON_DEACTIVATE_ERROR_ = 42;
        const octet TRANSITION_ON_SHUTDOWN_SUCCESS_ = 50;
        const octet TRANSITION_ON_SHUTDOWN_FAILURE_ = 51;
        const octet TRANSITION_ON_SHUTDOWN_ERROR_ = 52;
        const octet TRANSITION_ON_ERROR_SUCCESS_ = 60;
        const octet TRANSITION_ON_ERROR_FAILURE_ = 61;
        const octet TRANSITION_ON_ERROR_ERROR_ = 62;
        const octet TRANSITION_CALLBACK_SUCCESS_ = 97;
        const octet TRANSITION_CALLBACK_FAILURE_ = 98;
        const octet TRANSITION_CALLBACK_ERROR_ = 99;
      };
      @appendable
      struct Transition_ {
                octet id_;
                string<255> label_;
      };

    };
  };
};
module lifecycle_msgs {
  module msg {
    module dds_ {
      module State_Constants {
        const octet PRIMARY_STATE_UNKNOWN_ = 0;
        const octet PRIMARY_STATE_UNCONFIGURED_ = 1;
        const octet PRIMARY_STATE_INACTIVE_ = 2;
        const octet PRIMARY_STATE_ACTIVE_ = 3;
        const octet PRIMARY_STATE_FINALIZED_ = 4;
        const octet TRANSITION_STATE_CONFIGURING_ = 10;
        const octet TRANSITION_STATE_CLEANINGUP_ = 11;
        const octet TRANSITION_STATE_SHUTTINGDOWN_ = 12;
        const octet TRANSITION_STATE_ACTIVATING_ = 13;
        const octet TRANSITION_STATE_DEACTIVATING_ = 14;
        const octet TRANSITION_STATE_ERRORPROCESSING_ = 15;
      };
      @appendable
      struct State_ {
                octet id_;
                string<255> label_;
      };

    };
  };
};
module lifecycle_msgs {
  module msg {
    module dds_ {
      @appendable
      struct TransitionEvent_ {
                uint64 timestamp_;
                lifecycle_msgs::msg::dds_::Transition_ transition_;
                lifecycle_msgs::msg::dds_::State_ start_state_;
                lifecycle_msgs::msg::dds_::State_ goal_state_;
      };

    };
  };
};
module lifecycle_msgs {
  module msg {
    module dds_ {
      @appendable
      struct TransitionDescription_ {
                lifecycle_msgs::msg::dds_::Transition_ transition_;
                lifecycle_msgs::msg::dds_::State_ start_state_;
                lifecycle_msgs::msg::dds_::State_ goal_state_;
      };

    };
  };
};
module lifecycle_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetState_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module lifecycle_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetState_Response_ {
                lifecycle_msgs::msg::dds_::State_ current_state_;
      };

    };
  };
};
module lifecycle_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetAvailableTransitions_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module lifecycle_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetAvailableTransitions_Response_ {
                sequence<lifecycle_msgs::msg::dds_::TransitionDescription_,100> available_transitions_;
      };

    };
  };
};
module lifecycle_msgs {
  module srv {
    module dds_ {
      @appendable
      struct ChangeState_Request_ {
                lifecycle_msgs::msg::dds_::Transition_ transition_;
      };

    };
  };
};
module lifecycle_msgs {
  module srv {
    module dds_ {
      @appendable
      struct ChangeState_Response_ {
                boolean success_;
      };

    };
  };
};
module lifecycle_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetAvailableStates_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module lifecycle_msgs {
  module srv {
    module dds_ {
      @appendable
      struct GetAvailableStates_Response_ {
                sequence<lifecycle_msgs::msg::dds_::State_,100> available_states_;
      };

    };
  };
};
module pendulum_msgs {
  module msg {
    module dds_ {
      @appendable
      struct JointCommand_ {
                double position_;
      };

    };
  };
};
module pendulum_msgs {
  module msg {
    module dds_ {
      @appendable
      struct JointState_ {
                double position_;
                double velocity_;
                double effort_;
      };

    };
  };
};
module pendulum_msgs {
  module msg {
    module dds_ {
      @appendable
      struct RttestResults_ {
                builtin_interfaces::msg::dds_::Time_ stamp_;
                pendulum_msgs::msg::dds_::JointCommand_ command_;
                pendulum_msgs::msg::dds_::JointState_ state_;
                uint64 cur_latency_;
                double mean_latency_;
                uint64 min_latency_;
                uint64 max_latency_;
                uint64 minor_pagefaults_;
                uint64 major_pagefaults_;
      };

    };
  };
};
module rclcpp {
  module msg {
    module dds_ {
      @appendable
      struct Header_ {
                builtin_interfaces::msg::dds_::Time_ stamp_;
      };

    };
  };
};
module rclcpp {
  module msg {
    module dds_ {
      @appendable
      struct MessageWithHeader_ {
                rclcpp::msg::dds_::Header_ header_;
      };

    };
  };
};
module logging_demo {
  module srv {
    module dds_ {
      @appendable
      struct ConfigLogger_Request_ {
                string<255> logger_name_;
                string<255> level_;
      };

    };
  };
};
module logging_demo {
  module srv {
    module dds_ {
      @appendable
      struct ConfigLogger_Response_ {
                boolean success_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      @appendable
      struct Defaults_ {
                boolean bool_value_;
                octet byte_value_;
                octet char_value_;
                float float32_value_;
                double float64_value_;
                octet int8_value_;
                octet uint8_value_;
                int16 int16_value_;
                uint16 uint16_value_;
                int32 int32_value_;
                uint32 uint32_value_;
                int64 int64_value_;
                uint64 uint64_value_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      @appendable
      struct Empty_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      @appendable
      struct BasicTypes_ {
                boolean bool_value_;
                octet byte_value_;
                octet char_value_;
                float float32_value_;
                double float64_value_;
                octet int8_value_;
                octet uint8_value_;
                int16 int16_value_;
                uint16 uint16_value_;
                int32 int32_value_;
                uint32 uint32_value_;
                int64 int64_value_;
                uint64 uint64_value_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      module Constants_Constants {
        const boolean BOOL_CONST_ = TRUE;
        const octet BYTE_CONST_ = 50;
        const octet CHAR_CONST_ = 100;
        const float FLOAT32_CONST_ = 1.125000;
        const double FLOAT64_CONST_ = 1.125000;
        const octet INT8_CONST_ = 206;
        const octet UINT8_CONST_ = 200;
        const int16 INT16_CONST_ = -1000;
        const uint16 UINT16_CONST_ = 2000;
        const int32 INT32_CONST_ = -30000;
        const uint32 UINT32_CONST_ = 60000;
        const int64 INT64_CONST_ = -40000000;
        const uint64 UINT64_CONST_ = 50000000;
      };
      @appendable
      struct Constants_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      @appendable
      struct BoundedSequences_ {
                sequence<boolean,3> bool_values_;
                sequence<octet,3> byte_values_;
                sequence<octet,3> char_values_;
                sequence<float,3> float32_values_;
                sequence<double,3> float64_values_;
                sequence<octet,3> int8_values_;
                sequence<octet,3> uint8_values_;
                sequence<int16,3> int16_values_;
                sequence<uint16,3> uint16_values_;
                sequence<int32,3> int32_values_;
                sequence<uint32,3> uint32_values_;
                sequence<int64,3> int64_values_;
                sequence<uint64,3> uint64_values_;
                sequence<string<255>,3 > string_values_;
                sequence<rosidl_generator_py::msg::dds_::BasicTypes_,3> basic_types_values_;
                sequence<rosidl_generator_py::msg::dds_::Constants_,3> constants_values_;
                sequence<rosidl_generator_py::msg::dds_::Defaults_,3> defaults_values_;
                sequence<boolean,3> bool_values_default_;
                sequence<octet,3> byte_values_default_;
                sequence<octet,3> char_values_default_;
                sequence<float,3> float32_values_default_;
                sequence<double,3> float64_values_default_;
                sequence<octet,3> int8_values_default_;
                sequence<octet,3> uint8_values_default_;
                sequence<int16,3> int16_values_default_;
                sequence<uint16,3> uint16_values_default_;
                sequence<int32,3> int32_values_default_;
                sequence<uint32,3> uint32_values_default_;
                sequence<int64,3> int64_values_default_;
                sequence<uint64,3> uint64_values_default_;
                sequence<string<255>,3 > string_values_default_;
                int32 alignment_check_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      @appendable
      struct WStrings_ {
                wstring<255> wstring_value_;
                wstring<255> wstring_value_default1_;
                wstring<255> wstring_value_default2_;
                wstring<255> wstring_value_default3_;
                wstring<255> array_of_wstrings_[3];
                sequence<wstring<255>,3 > bounded_sequence_of_wstrings_;
                sequence<wstring<255>,100 > unbounded_sequence_of_wstrings_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      @appendable
      struct Nested_ {
                rosidl_generator_py::msg::dds_::BasicTypes_ basic_types_value_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      @appendable
      struct Arrays_ {
                boolean bool_values_[3];
                octet byte_values_[3];
                octet char_values_[3];
                float float32_values_[3];
                double float64_values_[3];
                octet int8_values_[3];
                octet uint8_values_[3];
                int16 int16_values_[3];
                uint16 uint16_values_[3];
                int32 int32_values_[3];
                uint32 uint32_values_[3];
                int64 int64_values_[3];
                uint64 uint64_values_[3];
                string<255> string_values_[3];
                rosidl_generator_py::msg::dds_::BasicTypes_ basic_types_values_[3];
                rosidl_generator_py::msg::dds_::Constants_ constants_values_[3];
                rosidl_generator_py::msg::dds_::Defaults_ defaults_values_[3];
                boolean bool_values_default_[3];
                octet byte_values_default_[3];
                octet char_values_default_[3];
                float float32_values_default_[3];
                double float64_values_default_[3];
                octet int8_values_default_[3];
                octet uint8_values_default_[3];
                int16 int16_values_default_[3];
                uint16 uint16_values_default_[3];
                int32 int32_values_default_[3];
                uint32 uint32_values_default_[3];
                int64 int64_values_default_[3];
                uint64 uint64_values_default_[3];
                string<255> string_values_default_[3];
                int32 alignment_check_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      @appendable
      struct StringArrays_ {
                string<5> ub_string_static_array_value_[3];
                sequence<string<5>,10 > ub_string_ub_array_value_;
                sequence<string<5>,100 > ub_string_dynamic_array_value_;
                sequence<string<255>,100 > string_dynamic_array_value_;
                string<255> string_static_array_value_[3];
                sequence<string<255>,10 > string_bounded_array_value_;
                sequence<string<255>,100 > def_string_dynamic_array_value_;
                string<255> def_string_static_array_value_[3];
                sequence<string<255>,10 > def_string_bounded_array_value_;
                sequence<string<255>,100 > def_various_quotes_;
                sequence<string<255>,100 > def_various_commas_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      module Strings_Constants {
        const string STRING_CONST_ = "Hello world!";
      };
      @appendable
      struct Strings_ {
                string<255> string_value_;
                string<255> string_value_default1_;
                string<255> string_value_default2_;
                string<255> string_value_default3_;
                string<255> string_value_default4_;
                string<255> string_value_default5_;
                string<22> bounded_string_value_;
                string<22> bounded_string_value_default1_;
                string<22> bounded_string_value_default2_;
                string<22> bounded_string_value_default3_;
                string<22> bounded_string_value_default4_;
                string<22> bounded_string_value_default5_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      @appendable
      struct UnboundedSequences_ {
                sequence<boolean,100> bool_values_;
                sequence<octet,100> byte_values_;
                sequence<octet,100> char_values_;
                sequence<float,100> float32_values_;
                sequence<double,100> float64_values_;
                sequence<octet,100> int8_values_;
                sequence<octet,100> uint8_values_;
                sequence<int16,100> int16_values_;
                sequence<uint16,100> uint16_values_;
                sequence<int32,100> int32_values_;
                sequence<uint32,100> uint32_values_;
                sequence<int64,100> int64_values_;
                sequence<uint64,100> uint64_values_;
                sequence<string<255>,100 > string_values_;
                sequence<rosidl_generator_py::msg::dds_::BasicTypes_,100> basic_types_values_;
                sequence<rosidl_generator_py::msg::dds_::Constants_,100> constants_values_;
                sequence<rosidl_generator_py::msg::dds_::Defaults_,100> defaults_values_;
                sequence<boolean,100> bool_values_default_;
                sequence<octet,100> byte_values_default_;
                sequence<octet,100> char_values_default_;
                sequence<float,100> float32_values_default_;
                sequence<double,100> float64_values_default_;
                sequence<octet,100> int8_values_default_;
                sequence<octet,100> uint8_values_default_;
                sequence<int16,100> int16_values_default_;
                sequence<uint16,100> uint16_values_default_;
                sequence<int32,100> int32_values_default_;
                sequence<uint32,100> uint32_values_default_;
                sequence<int64,100> int64_values_default_;
                sequence<uint64,100> uint64_values_default_;
                sequence<string<255>,100 > string_values_default_;
                int32 alignment_check_;
      };

    };
  };
};
module rosidl_generator_py {
  module msg {
    module dds_ {
      @appendable
      struct MultiNested_ {
                rosidl_generator_py::msg::dds_::Arrays_ array_of_arrays_[3];
                rosidl_generator_py::msg::dds_::BoundedSequences_ array_of_bounded_sequences_[3];
                rosidl_generator_py::msg::dds_::UnboundedSequences_ array_of_unbounded_sequences_[3];
                sequence<rosidl_generator_py::msg::dds_::Arrays_,3> bounded_sequence_of_arrays_;
                sequence<rosidl_generator_py::msg::dds_::BoundedSequences_,3> bounded_sequence_of_bounded_sequences_;
                sequence<rosidl_generator_py::msg::dds_::UnboundedSequences_,3> bounded_sequence_of_unbounded_sequences_;
                sequence<rosidl_generator_py::msg::dds_::Arrays_,100> unbounded_sequence_of_arrays_;
                sequence<rosidl_generator_py::msg::dds_::BoundedSequences_,100> unbounded_sequence_of_bounded_sequences_;
                sequence<rosidl_generator_py::msg::dds_::UnboundedSequences_,100> unbounded_sequence_of_unbounded_sequences_;
      };

    };
  };
};
module diagnostic_msgs {
  module msg {
    module dds_ {
      @appendable
      struct KeyValue_ {
                string<255> key_;
                string<255> value_;
      };

    };
  };
};
module diagnostic_msgs {
  module msg {
    module dds_ {
      module DiagnosticStatus_Constants {
        const octet OK_ = 0;
        const octet WARN_ = 1;
        const octet ERROR_ = 2;
        const octet STALE_ = 3;
      };
      @appendable
      struct DiagnosticStatus_ {
                octet level_;
                string<255> name_;
                string<255> message_;
                string<255> hardware_id_;
                sequence<diagnostic_msgs::msg::dds_::KeyValue_,100> values_;
      };

    };
  };
};
module diagnostic_msgs {
  module msg {
    module dds_ {
      @appendable
      struct DiagnosticArray_ {
                std_msgs::msg::dds_::Header_ header_;
                sequence<diagnostic_msgs::msg::dds_::DiagnosticStatus_,100> status_;
      };

    };
  };
};
module diagnostic_msgs {
  module srv {
    module dds_ {
      @appendable
      struct SelfTest_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module diagnostic_msgs {
  module srv {
    module dds_ {
      @appendable
      struct SelfTest_Response_ {
                string<255> id_;
                octet passed_;
                sequence<diagnostic_msgs::msg::dds_::DiagnosticStatus_,100> status_;
      };

    };
  };
};
module diagnostic_msgs {
  module srv {
    module dds_ {
      @appendable
      struct AddDiagnostics_Request_ {
                string<255> load_namespace_;
      };

    };
  };
};
module diagnostic_msgs {
  module srv {
    module dds_ {
      @appendable
      struct AddDiagnostics_Response_ {
                boolean success_;
                string<255> message_;
      };

    };
  };
};
module action_tutorials_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_Goal_ {
                int32 order_;
      };

    };
  };
};
module action_tutorials_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_SendGoal_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                action_tutorials_interfaces::action::dds_::Fibonacci_Goal_ goal_;
      };

    };
  };
};
module action_tutorials_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_SendGoal_Response_ {
                boolean accepted_;
                builtin_interfaces::msg::dds_::Time_ stamp_;
      };

    };
  };
};
module action_tutorials_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_Result_ {
                sequence<int32,100> sequence_;
      };

    };
  };
};
module action_tutorials_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_GetResult_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
      };

    };
  };
};
module action_tutorials_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_GetResult_Response_ {
                octet status_;
                action_tutorials_interfaces::action::dds_::Fibonacci_Result_ result_;
      };

    };
  };
};
module action_tutorials_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_Feedback_ {
                sequence<int32,100> partial_sequence_;
      };

    };
  };
};
module action_tutorials_interfaces {
  module action {
    module dds_ {
      @appendable
      struct Fibonacci_FeedbackMessage_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                action_tutorials_interfaces::action::dds_::Fibonacci_Feedback_ feedback_;
      };

    };
  };
};
module shape_msgs {
  module msg {
    module dds_ {
      module SolidPrimitive_Constants {
        const octet BOX_ = 1;
        const octet SPHERE_ = 2;
        const octet CYLINDER_ = 3;
        const octet CONE_ = 4;
        const octet BOX_X_ = 0;
        const octet BOX_Y_ = 1;
        const octet BOX_Z_ = 2;
        const octet SPHERE_RADIUS_ = 0;
        const octet CYLINDER_HEIGHT_ = 0;
        const octet CYLINDER_RADIUS_ = 1;
        const octet CONE_HEIGHT_ = 0;
        const octet CONE_RADIUS_ = 1;
      };
      @appendable
      struct SolidPrimitive_ {
                octet type_;
                sequence<double,3> dimensions_;
      };

    };
  };
};
module shape_msgs {
  module msg {
    module dds_ {
      @appendable
      struct MeshTriangle_ {
                uint32 vertex_indices_[3];
      };

    };
  };
};
module shape_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Mesh_ {
                sequence<shape_msgs::msg::dds_::MeshTriangle_,100> triangles_;
                sequence<geometry_msgs::msg::dds_::Point_,100> vertices_;
      };

    };
  };
};
module shape_msgs {
  module msg {
    module dds_ {
      @appendable
      struct Plane_ {
                double coef_[4];
      };

    };
  };
};
module libstatistics_collector {
  module msg {
    module dds_ {
      @appendable
      struct DummyMessage_ {
                std_msgs::msg::dds_::Header_ header_;
      };

    };
  };
};
module test_communication {
  module msg {
    module dds_ {
      @appendable
      struct UInt32_ {
                uint32 data_;
      };

    };
  };
};
module test_communication {
  module msg {
    module dds_ {
      @appendable
      struct FieldsWithSameType_ {
                test_msgs::msg::dds_::BasicTypes_ basic_types_values1_;
                test_msgs::msg::dds_::BasicTypes_ basic_types_values2_;
      };

    };
  };
};
module rqt_py_common {
  module msg {
    module dds_ {
      @appendable
      struct Val_ {
                double floats_[5];
      };

    };
  };
};
module rqt_py_common {
  module msg {
    module dds_ {
      @appendable
      struct ArrayVal_ {
                rqt_py_common::msg::dds_::Val_ vals_[5];
      };

    };
  };
};
module rqt_py_common {
  module srv {
    module dds_ {
      @appendable
      struct AddTwoInts_Request_ {
                int64 a_;
                int64 b_;
      };

    };
  };
};
module rqt_py_common {
  module srv {
    module dds_ {
      @appendable
      struct AddTwoInts_Response_ {
                int64 sum_;
      };

    };
  };
};
module tf2_msgs {
  module msg {
    module dds_ {
      module TF2Error_Constants {
        const octet NO_ERROR_ = 0;
        const octet LOOKUP_ERROR_ = 1;
        const octet CONNECTIVITY_ERROR_ = 2;
        const octet EXTRAPOLATION_ERROR_ = 3;
        const octet INVALID_ARGUMENT_ERROR_ = 4;
        const octet TIMEOUT_ERROR_ = 5;
        const octet TRANSFORM_ERROR_ = 6;
      };
      @appendable
      struct TF2Error_ {
                octet error_;
                string<255> error_string_;
      };

    };
  };
};
module tf2_msgs {
  module msg {
    module dds_ {
      @appendable
      struct TFMessage_ {
                sequence<geometry_msgs::msg::dds_::TransformStamped_,100> transforms_;
      };

    };
  };
};
module tf2_msgs {
  module action {
    module dds_ {
      @appendable
      struct LookupTransform_Goal_ {
                string<255> target_frame_;
                string<255> source_frame_;
                builtin_interfaces::msg::dds_::Time_ source_time_;
                builtin_interfaces::msg::dds_::Duration_ timeout_;
                builtin_interfaces::msg::dds_::Time_ target_time_;
                string<255> fixed_frame_;
                boolean advanced_;
      };

    };
  };
};
module tf2_msgs {
  module action {
    module dds_ {
      @appendable
      struct LookupTransform_SendGoal_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                tf2_msgs::action::dds_::LookupTransform_Goal_ goal_;
      };

    };
  };
};
module tf2_msgs {
  module action {
    module dds_ {
      @appendable
      struct LookupTransform_SendGoal_Response_ {
                boolean accepted_;
                builtin_interfaces::msg::dds_::Time_ stamp_;
      };

    };
  };
};
module tf2_msgs {
  module action {
    module dds_ {
      @appendable
      struct LookupTransform_Result_ {
                geometry_msgs::msg::dds_::TransformStamped_ transform_;
                tf2_msgs::msg::dds_::TF2Error_ error_;
      };

    };
  };
};
module tf2_msgs {
  module action {
    module dds_ {
      @appendable
      struct LookupTransform_GetResult_Request_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
      };

    };
  };
};
module tf2_msgs {
  module action {
    module dds_ {
      @appendable
      struct LookupTransform_GetResult_Response_ {
                octet status_;
                tf2_msgs::action::dds_::LookupTransform_Result_ result_;
      };

    };
  };
};
module tf2_msgs {
  module action {
    module dds_ {
      @appendable
      struct LookupTransform_Feedback_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module tf2_msgs {
  module action {
    module dds_ {
      @appendable
      struct LookupTransform_FeedbackMessage_ {
                unique_identifier_msgs::msg::dds_::UUID_ goal_id_;
                tf2_msgs::action::dds_::LookupTransform_Feedback_ feedback_;
      };

    };
  };
};
module tf2_msgs {
  module srv {
    module dds_ {
      @appendable
      struct FrameGraph_Request_ {
                octet structure_needs_at_least_one_member_;
      };

    };
  };
};
module tf2_msgs {
  module srv {
    module dds_ {
      @appendable
      struct FrameGraph_Response_ {
                string<255> frame_yaml_;
      };

    };
  };
};
